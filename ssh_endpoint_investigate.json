{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Use Cases",
    "misc": { "apps_list": ["Jira", "SSH"] },
    "coa": {
        "data": {
            "clean": true,
            "code_block": "import requests\n\nrequests.packages.urllib3.disable_warnings()  # pylint: disable=E1101\n\nAUTOMATION_HEADER = {\"ph-auth-token\": \"s43OVieY63GXAhXuC2fIPljDv5sVNksjH+B+5V2qlYc=\"}\nPHANTOM_BASE_URL = \"https://phantom\"\nPHANTOM_SELF_SIGNED_PATH = \"/opt/phantom/etc/certs/this_phantom_self_signed.pem\"\n\ndef find_matching_case(linking_tag):\n\n    # use elasticsearch to find the linking_tag anywhere it might be\n    search_url = \"{}/rest/search?query={}&page_size=0\".format(PHANTOM_BASE_URL, linking_tag)\n    search_results = requests.get(search_url, headers=AUTOMATION_HEADER, verify=PHANTOM_SELF_SIGNED_PATH).json()\n\n    # look at each returned container with a matching field to see if its a case\n    case_id = None\n    for result in search_results['results']:\n        if result['category'] == 'container':\n            container_result = requests.get(\"{}/rest/container/{}\".format(PHANTOM_BASE_URL, result['id']),\n                                            headers=AUTOMATION_HEADER, verify=PHANTOM_SELF_SIGNED_PATH).json()\n            \n            phantom.debug(\"looking at container: {}\".format(container_result))\n            \n            if container_result['container_type'] == 'case':\n                if container_result['data']['fields']['customfield_10201'][0] == linking_tag:\n                    if container_result['status'] != \"closed\":\n                        case_id = container_result['id']\n                        return case_id\n    return None",
            "description": "This playbook gathers basic system information from a CentOS 7 server using SSH. The investigation is kicked off automatically when the right type of Jira ticket is opened. The results of the SSH commands are formatted and added to the new Jira ticket as comments to help the analyst make a quick decision about how to handle the server. The first time one of these tickets comes through Phantom it will be turned into a Case, then any future tickets will be added to the existing Case to allow all of these servers to be treated as a batch.",
            "hash": "0c8125c635598a8d65ed183259ac7e2a01d09b59",
            "joint": {
                "cells": [
                    {
                        "0": "E",
                        "1": "N",
                        "2": "D",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".title": {
                                "text": "END"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_end.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_finish(container, summary):\n    phantom.debug('on_finish() called')\n    # This function is called after all actions are completed.\n    # summary of all the action and/or all detals of actions \n    # can be collected here.\n\n    # summary_json = phantom.get_summary()\n    # if 'result' in summary_json:\n        # for action_result in summary_json['result']:\n            # if 'action_run_id' in action_result:\n                # action_results = phantom.get_action_results(action_run_id=action_result['action_run_id'], result_data=False, flatten=False)\n                # phantom.debug(action_results)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "report failure, enrich ticket 2, enrich ticket 1",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "b9cd1b07-4b7e-4667-abc6-42c2e8b86e43",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 321,
                        "line_start": 308,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "outPorts": [],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2180,
                            "y": 920
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "END",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 2
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "562d9427-dd0a-49ba-8056-abfba3663385",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "83a0d1f9-e128-44b9-a15e-4fab631cfdfd",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "877ac1ff-7f89-476a-a423-bc93ca761038",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 3
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "79a9c2d1-4bf4-4d48-9d86-fe1d999ce327",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "877ac1ff-7f89-476a-a423-bc93ca761038",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "9480f6ef-b8ae-4b81-9429-b13bed3652a8",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 12
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "4f71223c-596e-4b03-9047-fa75880a5b96",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "7592f44d-6fa5-4fee-8c17-b7f011a14326",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "cfd0c95d-ae59-4264-9b85-ea7acbfd45e5",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 23
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "9c188ff1-6e4c-45ef-846b-fa5ba751fe0b",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "cfd0c95d-ae59-4264-9b85-ea7acbfd45e5",
                            "port": "out-2",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "10a204f4-c6aa-4cff-af84-0e12bcdf7607",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 29
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "26b3fcab-500b-48f5-84f2-9dbfbe497c92",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "10a204f4-c6aa-4cff-af84-0e12bcdf7607",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "b9cd1b07-4b7e-4667-abc6-42c2e8b86e43",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 31
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "1e8ab4d8-4b4b-42e0-9498-98f54b7abf0d",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "cfd0c95d-ae59-4264-9b85-ea7acbfd45e5",
                            "port": "out-1",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "2d22019e-ff5e-4f5c-9ec5-20ae7be77543",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 47
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "3d1a67aa-2a7a-4eeb-8e96-2e7353cc7b7d",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "2d22019e-ff5e-4f5c-9ec5-20ae7be77543",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "110ebc7c-f56e-4333-8fed-1baa8b7efd9b",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 51
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "6199112a-b020-4e5a-be29-b223ed887233",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "f3674cf7-6876-4a45-b876-0b025e2fa89f",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "43b90cf3-c85b-4c8b-9d02-3d56defae56e",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 62
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "8d5c04b8-86b2-4b4b-aa9a-d9e5b87f1e9f",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "43b90cf3-c85b-4c8b-9d02-3d56defae56e",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "b9cd1b07-4b7e-4667-abc6-42c2e8b86e43",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "vertices": [
                            {
                                "x": 2140,
                                "y": 800
                            }
                        ],
                        "z": 64
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "43b73553-dba4-4741-a371-bfd08fd23f78",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "9480f6ef-b8ae-4b81-9429-b13bed3652a8",
                            "port": "out-1",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "9a81da80-7cdc-44fc-bf39-901728471c2b",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 109
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "fbfbb760-36ba-4686-b2dd-c603e4b4e0df",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "9a81da80-7cdc-44fc-bf39-901728471c2b",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "7592f44d-6fa5-4fee-8c17-b7f011a14326",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 111
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "82ee278b-111c-42b4-b4ff-e152e42caa2b",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "110ebc7c-f56e-4333-8fed-1baa8b7efd9b",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "b9cd1b07-4b7e-4667-abc6-42c2e8b86e43",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "vertices": [
                            {
                                "x": 2140,
                                "y": 660
                            }
                        ],
                        "z": 176
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "21f5a8d0-2e82-42eb-a2f2-17818ad561a3",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "cfd0c95d-ae59-4264-9b85-ea7acbfd45e5",
                            "port": "out-1",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "f3674cf7-6876-4a45-b876-0b025e2fa89f",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 177
                    },
                    {
                        "0": "S",
                        "1": "T",
                        "2": "A",
                        "3": "R",
                        "4": "T",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "ref-x": 33,
                                "text": "START"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "ref-x": 13,
                                "xlink:href": "/inc/coa/img/block_icon_start.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_start(container):\n    phantom.debug('on_start() called')\n    \n    # call 'get_ticket_1' block\n    get_ticket_1(container=container)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "83a0d1f9-e128-44b9-a15e-4fab631cfdfd",
                        "inPorts": [],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 53,
                        "line_start": 45,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 560,
                            "y": 640
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "START",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 228
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "transform": "rotate(45 30 70)"
                            },
                            ".border": {
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 1
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            },
                            "g.notes image": {
                                "xlink:href": "/inc/coa/img/block_icon_note_on.svg"
                            }
                        },
                        "block_code": "def only_new_linux_server(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('only_new_linux_server() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"get_ticket_1:action_result.data.*.fields.Custom Label Field Two.0\", \"==\", \"new_linux_server\"],\n        ],\n        name=\"only_new_linux_server:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        promote_to_case(action=action, success=success, container=container, results=results, handle=handle, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "get ticket",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "only_new_linux_server",
                        "description": "Only investigate tickets of type \"new_linux_server\".",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "9480f6ef-b8ae-4b81-9429-b13bed3652a8",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 74,
                        "line_start": 56,
                        "name": "filter",
                        "notes": "Only investigate tickets of type \"new_linux_server\".",
                        "number": 1,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "get_ticket_1:action_result.data.*.fields.Custom Label Field Two.0",
                                        "value": "new_linux_server"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 940,
                            "y": 620
                        },
                        "previous_function": "",
                        "previous_name": "only_new_linux_server",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 270
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "transform": "rotate(45 30 70)"
                            },
                            ".border": {
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 1
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            },
                            "g.notes image": {
                                "xlink:href": "/inc/coa/img/block_icon_note_on.svg"
                            }
                        },
                        "block_code": "def fail_unless_centos7(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('fail_unless_centos7() called')\n\n    # check for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"CentOS Linux release 7\", \"in\", \"check_centos_version:action_result.data.*.output\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched_artifacts_1 or matched_results_1:\n        get_login_history(action=action, success=success, container=container, results=results, handle=handle)\n        list_open_ports(action=action, success=success, container=container, results=results, handle=handle)\n        return\n\n    # call connected blocks for 'else' condition 2\n    report_failure(action=action, success=success, container=container, results=results, handle=handle)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "check centos version",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "fail_unless_centos7",
                        "description": "This playbook was developed and tested for CentOS 7 servers, so this checks to make sure the target server is running CentOS 7.",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "cfd0c95d-ae59-4264-9b85-ea7acbfd45e5",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 99,
                        "line_start": 77,
                        "name": "decision",
                        "notes": "This playbook was developed and tested for CentOS 7 servers, so this checks to make sure the target server is running CentOS 7.",
                        "number": 1,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "in",
                                        "data_type": "",
                                        "param": "CentOS Linux release 7",
                                        "value": "check_centos_version:action_result.data.*.output"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1560,
                            "y": 620
                        },
                        "previous_function": "",
                        "previous_name": "fail_unless_centos7",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 301
                    },
                    {
                        "action": "add comment",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "comment": "philscomment",
                            "id": "container:source_data_identifier"
                        },
                        "angle": 0,
                        "app": "",
                        "approver": "",
                        "assets": [
                            {
                                "action": "",
                                "active": true,
                                "app_name": "Jira",
                                "app_version": "2.0.8",
                                "config_type": "asset",
                                "fields": {
                                    "comment": "philscomment",
                                    "id": "container:source_data_identifier"
                                },
                                "id": "-",
                                "loaded": false,
                                "missing": false,
                                "name": "jira",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "jira ticket key"
                                        ],
                                        "data_path": "action_result.parameter.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.comment",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    }
                                ],
                                "product_name": "Jira",
                                "product_vendor": "Atlassian",
                                "type": ""
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "enrich ticket 2"
                            },
                            ".border": {
                                "height": 88
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "fill": "#FFFFFF",
                                "font-size": 12,
                                "font-weight": 300,
                                "opacity": 0,
                                "ref": ".background",
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.code image": {
                                "xlink:href": "/inc/coa/img/block_icon_code_on.svg"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            },
                            "g.notes image": {
                                "xlink:href": "/inc/coa/img/block_icon_note_on.svg"
                            },
                            "rect.warn-background": {
                                "fill": "#FFFFFF"
                            },
                            "text.icon": {
                                "fill": "#FFFFFF"
                            }
                        },
                        "block_code": "# read-only block view not available",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "#5094D4",
                        "connected_to_start": true,
                        "connection_name": "list open ports",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "def enrich_ticket_2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('enrich_ticket_2() called')\n        \n    source_data_identifier_value = container.get('source_data_identifier', None)\n\n    # collect the data from the output of the ss command\n    full_result = phantom.collect2(container=container, datapath=['list_open_ports:action_result.data.*.output', 'list_open_ports:action_result.parameter.context.artifact_id'], action_results=results)\n    \n    # parse the results from ss into Jira-flavored markdown\n    comment_text = \"|| protocol || state || recv-q || send-q || local_address:port || peer_address:port || users ||\\n\"\n    lines = full_result[0][0].split('\\n')[1:]\n    for line in lines:\n        protocol, state, recv, send, local_address_port, peer_address_port, users = line.split()\n        comment_text += \"| {} | {} | {} | {} | {} | {} | {} |\\n\".format(protocol,\n                                                                        state,\n                                                                        recv,\n                                                                        send,\n                                                                        local_address_port,\n                                                                        peer_address_port,\n                                                                        users.replace(\":(\", \": (\"))\n    \n    phantom.debug(\"comment_text: {}\".format(comment_text))\n    \n    parameters = []\n    \n    # build parameters list for 'add_ss_comment' call\n    parameters.append({\n        'id': source_data_identifier_value,\n        'comment': comment_text,\n    })\n\n    phantom.act(\"add comment\", parameters=parameters, assets=['jira'], name=\"add_ss_comment\", parent_action=action)    \n    \n    return",
                        "custom_join": "",
                        "custom_name": "enrich ticket 2",
                        "delay": 0,
                        "description": "Format the output of \"ss -tunapl\" and add it to the Jira ticket as a Jira-markup table in a comment.",
                        "has_custom": true,
                        "has_custom_block": true,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "43b90cf3-c85b-4c8b-9d02-3d56defae56e",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 137,
                        "line_start": 102,
                        "message": "Configuring now",
                        "name": "add comment",
                        "notes": "Format the output of \"ss -tunapl\" and add it to the Jira ticket as a Jira-markup table in a comment.",
                        "number": 3,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1940,
                            "y": 760
                        },
                        "previous_function": "",
                        "previous_name": "enrich_ticket_2",
                        "required_params": {
                            "comment": true,
                            "id": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 112,
                            "width": 168
                        },
                        "state": "asset",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 311
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".api": {
                                "text": "promote to-case"
                            },
                            ".border": {
                                "height": 88
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "fill": "#FFFFFF",
                                "font-size": 12,
                                "font-weight": 300,
                                "opacity": 0,
                                "ref": ".background",
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "xlink:href": "/inc/coa/img/block_icon_code_on.svg"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            },
                            "rect.warn-background": {
                                "fill": "#FFFFFF"
                            },
                            "text.icon": {
                                "fill": "#FFFFFF"
                            }
                        },
                        "block_code": "# read-only block view not available",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "key": "promote-to-case",
                                "promoteToCaseTemplate": "NIST 800-61"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "get ticket",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "def promote_to_case(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('promote_to_case() called')\n\n    matching_case = find_matching_case(\"new_linux_server\")\n\n    if matching_case:\n        phantom.debug(\"found matching case with id {}, so this container (id {}) will be added to that case\".format(matching_case, container['id']))\n        phantom.merge(case=matching_case, container_id=container['id'])\n    else:\n        phantom.debug(\"did not find matching case, so this container will be promoted to a case\")\n        phantom.promote(container=container, template=\"NIST 800-61\", trace=True)\n    \n    check_centos_version(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "promote to case",
                        "description": "Search for a Case that was created from this type of Jira ticket. If there is none, promote this container to a Case. If there is a matching Case, add this container to that Case.",
                        "has_custom": true,
                        "has_custom_block": true,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "9a81da80-7cdc-44fc-bf39-901728471c2b",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 156,
                        "line_start": 140,
                        "message": "Configuring now",
                        "name": "promote to-case",
                        "notes": "Search for a Case that was created from this type of Jira ticket. If there is none, promote this container to a Case. If there is a matching Case, add this container to that Case.",
                        "number": 2,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1080,
                            "y": 620
                        },
                        "previous_function": "",
                        "previous_name": "promote_to_case",
                        "show_number": false,
                        "size": {
                            "height": 112,
                            "width": 168
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 313
                    },
                    {
                        "action": "get ticket",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "id": "container:source_data_identifier"
                        },
                        "angle": 0,
                        "app": "",
                        "approver": "",
                        "assets": [
                            {
                                "action": "",
                                "active": true,
                                "app_name": "Jira",
                                "app_version": "2.0.8",
                                "config_type": "asset",
                                "fields": {
                                    "id": "container:source_data_identifier"
                                },
                                "id": "-",
                                "loaded": false,
                                "missing": false,
                                "name": "jira",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "jira ticket key"
                                        ],
                                        "data_path": "action_result.parameter.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Summary",
                                        "column_order": 0,
                                        "data_path": "action_result.data.*.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Description",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.description",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "ID",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Type",
                                        "column_order": 3,
                                        "data_path": "action_result.data.*.issue_type",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Key",
                                        "column_order": 4,
                                        "contains": [
                                            "jira ticket key"
                                        ],
                                        "data_path": "action_result.data.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Status",
                                        "column_order": 5,
                                        "data_path": "action_result.data.*.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Priority",
                                        "column_order": 6,
                                        "data_path": "action_result.data.*.priority",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Resolution",
                                        "column_order": 7,
                                        "data_path": "action_result.data.*.resolution",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Reporter",
                                        "column_order": 8,
                                        "data_path": "action_result.data.*.reporter",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.project_key",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.votes.self",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.votes.votes",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.votes.hasVoted",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.status.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.status.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.status.self",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.status.iconUrl",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.status.description",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.status.statusCategory.id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.status.statusCategory.key",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.status.statusCategory.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.status.statusCategory.self",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.status.statusCategory.colorName",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.comment.total",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.comment.startAt",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.comment.maxResults",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.created",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.creator.key",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.creator.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.creator.self",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.creator.active",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.creator.timeZone",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.creator.avatarUrls.16x16",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.creator.avatarUrls.24x24",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.creator.avatarUrls.32x32",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.creator.avatarUrls.48x48",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.creator.displayName",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.creator.emailAddress",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.project.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.project.key",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.project.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.project.self",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.project.avatarUrls.16x16",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.project.avatarUrls.24x24",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.project.avatarUrls.32x32",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.project.avatarUrls.48x48",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.updated",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.watches.self",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.watches.isWatching",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.watches.watchCount",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.worklog.total",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.worklog.startAt",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.worklog.maxResults",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.priority.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.priority.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.priority.self",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.priority.iconUrl",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.progress.total",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.progress.progress",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.reporter.key",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.reporter.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.reporter.self",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.reporter.active",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.reporter.timeZone",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.reporter.avatarUrls.16x16",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.reporter.avatarUrls.24x24",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.reporter.avatarUrls.32x32",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.reporter.avatarUrls.48x48",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.reporter.displayName",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.reporter.emailAddress",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.issuetype.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.issuetype.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.issuetype.self",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.issuetype.iconUrl",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.issuetype.subtask",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.issuetype.avatarId",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.issuetype.description",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.workratio",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.description",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.aggregateprogress.total",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.aggregateprogress.progress",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.attachment.*.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.attachment.*.self",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.attachment.*.size",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.attachment.*.author.key",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.attachment.*.author.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.attachment.*.author.self",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.attachment.*.author.active",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.attachment.*.author.timeZone",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.attachment.*.author.avatarUrls.16x16",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.attachment.*.author.avatarUrls.24x24",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.attachment.*.author.avatarUrls.32x32",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.attachment.*.author.avatarUrls.48x48",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.attachment.*.author.displayName",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.attachment.*.author.emailAddress",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.attachment.*.content",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.attachment.*.created",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.attachment.*.filename",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.attachment.*.mimeType",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.attachment.*.thumbnail",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.assignee.self",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.assignee.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.assignee.displayName",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.assignee.avatarUrls.16x16",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.assignee.avatarUrls.24x24",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.assignee.avatarUrls.32x32",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.assignee.avatarUrls.48x48",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.assignee.emailAddress",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.assignee.key",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.assignee.active",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.assignee.timeZone",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    }
                                ],
                                "product_name": "Jira",
                                "product_vendor": "Atlassian",
                                "type": ""
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "get ticket"
                            },
                            ".border": {
                                "height": 88
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "fill": "#FFFFFF",
                                "font-size": 12,
                                "font-weight": 300,
                                "opacity": 0,
                                "ref": ".background",
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.code image": {
                                "xlink:href": "/inc/coa/img/block_icon_code_on.svg"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            },
                            "g.notes image": {
                                "xlink:href": "/inc/coa/img/block_icon_note_on.svg"
                            },
                            "rect.warn-background": {
                                "fill": "#FFFFFF"
                            },
                            "text.icon": {
                                "fill": "#FFFFFF"
                            }
                        },
                        "block_code": "def get_ticket_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('get_ticket_1() called')\n\n    source_data_identifier_value = container.get('source_data_identifier', None)\n\n    # collect data for 'get_ticket_1' call\n\n    parameters = []\n    \n    # build parameters list for 'get_ticket_1' call\n    parameters.append({\n        'id': source_data_identifier_value,\n    })\n\n    phantom.act(\"get ticket\", parameters=parameters, assets=['jira'], callback=only_new_linux_server, name=\"get_ticket_1\")    \n    \n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "#5094D4",
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "def get_ticket_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('get_ticket_1() called')\n\n    # the jira key is the ticket name such as ABC-3368, which can be pulled from the ticket container's raw data\n    container_raw = phantom.get_raw_data(container)\n    container_parsed = json.loads(container_raw)\n    jira_key = container_parsed['key']\n    phantom.debug(\"using Jira ticket with key: {}\".format(jira_key))\n    \n    parameters = [{'id': jira_key,}]\n    phantom.act(\"get ticket\", parameters=parameters, assets=['jira'], callback=only_new_linux_server, name=\"get_ticket_1\")    \n    \n    return",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "Pull the ticket from Jira to use its metadata for future actions and make sure the ingested container references a valid ticket.",
                        "has_custom": true,
                        "has_custom_block": true,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "877ac1ff-7f89-476a-a423-bc93ca761038",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 173,
                        "line_start": 159,
                        "message": "Configuring now",
                        "name": "get ticket",
                        "notes": "Pull the ticket from Jira to use its metadata for future actions and make sure the ingested container references a valid ticket.",
                        "number": 1,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 700,
                            "y": 620
                        },
                        "previous_function": "",
                        "previous_name": "get_ticket_1",
                        "required_params": {
                            "id": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 112,
                            "width": 168
                        },
                        "state": "asset",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 315
                    },
                    {
                        "action": "execute program",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "command": "/usr/bin/last -a",
                            "ip_hostname": "get_ticket_1:action_result.data.*.fields.Custom Text Field One",
                            "timeout": ""
                        },
                        "angle": 0,
                        "app": "",
                        "approver": "",
                        "assets": [
                            {
                                "action": "",
                                "active": true,
                                "app_name": "SSH",
                                "app_version": "1.0.32",
                                "config_type": "asset",
                                "fields": {
                                    "command": "/usr/bin/last -a",
                                    "ip_hostname": "get_ticket_1:action_result.data.*.fields.Custom Text Field One",
                                    "timeout": ""
                                },
                                "id": "-",
                                "loaded": false,
                                "missing": false,
                                "name": "ssh",
                                "output": [
                                    {
                                        "data_path": "action_result.data.*.output",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.command",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "ip",
                                            "host name"
                                        ],
                                        "data_path": "action_result.parameter.ip_hostname",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.timeout",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.exit_status",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    }
                                ],
                                "product_name": "SSH",
                                "product_vendor": "Generic",
                                "type": ""
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "get login history"
                            },
                            ".background": {
                                "stroke": "#E6984E"
                            },
                            ".border": {
                                "height": 88
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "fill": "#FFFFFF",
                                "font-size": 12,
                                "font-weight": 300,
                                "opacity": 0,
                                "ref": ".background",
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            },
                            "g.notes image": {
                                "xlink:href": "/inc/coa/img/block_icon_note_on.svg"
                            },
                            "rect.warn-background": {
                                "fill": "#FFFFFF"
                            },
                            "text.icon": {
                                "fill": "#FFFFFF"
                            }
                        },
                        "block_code": "def get_login_history(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('get_login_history() called')\n    \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'get_login_history' call\n    results_data_1 = phantom.collect2(container=container, datapath=['get_ticket_1:action_result.data.*.fields.Custom Text Field One', 'get_ticket_1:action_result.parameter.context.artifact_id'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'get_login_history' call\n    for results_item_1 in results_data_1:\n        parameters.append({\n            'command': \"/usr/bin/last -a\",\n            'ip_hostname': results_item_1[0],\n            'timeout': \"\",\n            # context (artifact id) is added to associate results with the artifact\n            'context': {'artifact_id': results_item_1[1]},\n        })\n\n    phantom.act(\"execute program\", parameters=parameters, assets=['ssh'], callback=enrich_ticket_1, name=\"get_login_history\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "#5094D4",
                        "connected_to_start": true,
                        "connection_name": "check centos version",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "get login history",
                        "delay": 0,
                        "description": "Run \"/usr/bin/last -a\" to see the login history.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "2d22019e-ff5e-4f5c-9ec5-20ae7be77543",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 200,
                        "line_start": 176,
                        "message": "Configuring now",
                        "name": "execute program",
                        "notes": "Run \"/usr/bin/last -a\" to see the login history.",
                        "number": 2,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1700,
                            "y": 620
                        },
                        "previous_function": "",
                        "previous_name": "get_login_history",
                        "required_params": {},
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 112,
                            "width": 168
                        },
                        "state": "asset",
                        "status": "warn",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 321
                    },
                    {
                        "action": "execute program",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "command": "/usr/sbin/ss -tunapl",
                            "ip_hostname": "get_ticket_1:action_result.data.*.fields.Custom Text Field One",
                            "timeout": ""
                        },
                        "angle": 0,
                        "app": "",
                        "approver": "",
                        "assets": [
                            {
                                "action": "",
                                "active": true,
                                "app_name": "SSH",
                                "app_version": "1.0.32",
                                "config_type": "asset",
                                "fields": {
                                    "command": "/usr/sbin/ss -tunapl",
                                    "ip_hostname": "get_ticket_1:action_result.data.*.fields.Custom Text Field One",
                                    "timeout": ""
                                },
                                "id": "-",
                                "loaded": false,
                                "missing": false,
                                "name": "ssh",
                                "output": [
                                    {
                                        "data_path": "action_result.data.*.output",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.command",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "ip",
                                            "host name"
                                        ],
                                        "data_path": "action_result.parameter.ip_hostname",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.timeout",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.exit_status",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    }
                                ],
                                "product_name": "SSH",
                                "product_vendor": "Generic",
                                "type": ""
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "list open ports"
                            },
                            ".background": {
                                "stroke": "#E6984E"
                            },
                            ".border": {
                                "height": 88
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "fill": "#FFFFFF",
                                "font-size": 12,
                                "font-weight": 300,
                                "opacity": 0,
                                "ref": ".background",
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            },
                            "g.notes image": {
                                "xlink:href": "/inc/coa/img/block_icon_note_on.svg"
                            },
                            "rect.warn-background": {
                                "fill": "#FFFFFF"
                            },
                            "text.icon": {
                                "fill": "#FFFFFF"
                            }
                        },
                        "block_code": "def list_open_ports(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('list_open_ports() called')\n    \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'list_open_ports' call\n    results_data_1 = phantom.collect2(container=container, datapath=['get_ticket_1:action_result.data.*.fields.Custom Text Field One', 'get_ticket_1:action_result.parameter.context.artifact_id'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'list_open_ports' call\n    for results_item_1 in results_data_1:\n        parameters.append({\n            'command': \"/usr/sbin/ss -tunapl\",\n            'ip_hostname': results_item_1[0],\n            'timeout': \"\",\n            # context (artifact id) is added to associate results with the artifact\n            'context': {'artifact_id': results_item_1[1]},\n        })\n\n    phantom.act(\"execute program\", parameters=parameters, assets=['ssh'], callback=enrich_ticket_2, name=\"list_open_ports\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "#5094D4",
                        "connected_to_start": true,
                        "connection_name": "check centos version",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "list open ports",
                        "delay": 0,
                        "description": "Run \"/usr/sbin/ss -tunapl\" to see which services are listening on which TCP and UDP ports. Note that \"ss\" is very similar to \"netstat\", which is deprecated and no longer installed by default on CentOS 7.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "f3674cf7-6876-4a45-b876-0b025e2fa89f",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 227,
                        "line_start": 203,
                        "message": "Configuring now",
                        "name": "execute program",
                        "notes": "Run \"ss -tunapl\" to see which services are listening on which TCP and UDP ports. Note that \"ss\" is very similar to \"netstat\", which is deprecated and no longer installed by default on CentOS 7.",
                        "number": 3,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1700,
                            "y": 760
                        },
                        "previous_function": "",
                        "previous_name": "list_open_ports",
                        "required_params": {},
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 112,
                            "width": 168
                        },
                        "state": "asset",
                        "status": "warn",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 322
                    },
                    {
                        "action": "add comment",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "comment": "usr_bin_last:action_result.data.*.output",
                            "id": "container:source_data_identifier"
                        },
                        "angle": 0,
                        "app": "",
                        "approver": "",
                        "assets": [
                            {
                                "action": "",
                                "active": true,
                                "app_name": "Jira",
                                "app_version": "2.0.8",
                                "config_type": "asset",
                                "fields": {
                                    "comment": "get_login_history:action_result.data.*.output",
                                    "id": "container:source_data_identifier"
                                },
                                "id": "-",
                                "loaded": false,
                                "missing": false,
                                "name": "jira",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "jira ticket key"
                                        ],
                                        "data_path": "action_result.parameter.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.comment",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    }
                                ],
                                "product_name": "Jira",
                                "product_vendor": "Atlassian",
                                "type": ""
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "enrich ticket 1"
                            },
                            ".border": {
                                "height": 88
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "fill": "#FFFFFF",
                                "font-size": 12,
                                "font-weight": 300,
                                "opacity": 0,
                                "ref": ".background",
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.code image": {
                                "xlink:href": "/inc/coa/img/block_icon_code_on.svg"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            },
                            "g.notes image": {
                                "xlink:href": "/inc/coa/img/block_icon_note_on.svg"
                            },
                            "rect.warn-background": {
                                "fill": "#FFFFFF"
                            },
                            "text.icon": {
                                "fill": "#FFFFFF"
                            }
                        },
                        "block_code": "# read-only block view not available",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "#5094D4",
                        "connected_to_start": true,
                        "connection_name": "get login history",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "def enrich_ticket_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('enrich_ticket_1() called')\n        \n    source_data_identifier_value = container.get('source_data_identifier', None)\n\n    # collect the login history from the SSH command result\n    full_last_result = phantom.collect2(container=container, datapath=['get_login_history:action_result.data.*.output', 'get_login_history:action_result.parameter.context.artifact_id'], action_results=results)\n\n    # format the output into Jira's markup language for making a table\n    comment_text = \"|| output of '/usr/bin/last -a' ||\\n\"\n    last_lines = full_last_result[0][0].split('\\n')\n    for line in last_lines:\n        comment_text += \"| {} |\\n\".format(line)\n    \n    parameters = []\n    \n    parameters.append({\n        'id': source_data_identifier_value,\n        'comment': comment_text,\n        'context': {'artifact_id': container.get('id', None)},\n    })\n\n    phantom.act(\"add comment\", parameters=parameters, assets=['jira'], name=\"add_comment_2\", parent_action=action)    \n    \n    return",
                        "custom_join": "",
                        "custom_name": "enrich ticket 1",
                        "delay": 0,
                        "description": "Format the output of \"last -a\" and add it to the Jira ticket as a Jira-markup table in a comment.",
                        "has_custom": true,
                        "has_custom_block": true,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "110ebc7c-f56e-4333-8fed-1baa8b7efd9b",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 256,
                        "line_start": 230,
                        "message": "Configuring now",
                        "name": "add comment",
                        "notes": "Format the output of \"last -a\" and add it to the Jira ticket as a Jira-markup table in a comment.",
                        "number": 2,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1940,
                            "y": 620
                        },
                        "previous_function": "",
                        "previous_name": "enrich_ticket_1",
                        "required_params": {
                            "comment": true,
                            "id": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 112,
                            "width": 168
                        },
                        "state": "asset",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 324
                    },
                    {
                        "action": "add comment",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "comment": "Phantom failed to enrich this ticket because it looks like the server is not running CentOS 7, which is the only operating system supported by this playbook.",
                            "id": "container:source_data_identifier"
                        },
                        "angle": 0,
                        "app": "",
                        "approver": "",
                        "assets": [
                            {
                                "action": "",
                                "active": true,
                                "app_name": "Jira",
                                "app_version": "2.0.8",
                                "config_type": "asset",
                                "fields": {
                                    "comment": "Phantom failed to enrich this ticket because it looks like the server is not running CentOS 7, which is the only operating system supported by this playbook.",
                                    "id": "container:source_data_identifier"
                                },
                                "id": "-",
                                "loaded": false,
                                "missing": false,
                                "name": "jira",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "jira ticket key"
                                        ],
                                        "data_path": "action_result.parameter.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.comment",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    }
                                ],
                                "product_name": "Jira",
                                "product_vendor": "Atlassian",
                                "type": ""
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "report failure"
                            },
                            ".border": {
                                "height": 88
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "fill": "#FFFFFF",
                                "font-size": 12,
                                "font-weight": 300,
                                "opacity": 0,
                                "ref": ".background",
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            },
                            "g.notes image": {
                                "xlink:href": "/inc/coa/img/block_icon_note_on.svg"
                            },
                            "rect.warn-background": {
                                "fill": "#FFFFFF"
                            },
                            "text.icon": {
                                "fill": "#FFFFFF"
                            }
                        },
                        "block_code": "def report_failure(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('report_failure() called')\n    \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    source_data_identifier_value = container.get('source_data_identifier', None)\n\n    # collect data for 'report_failure' call\n\n    parameters = []\n    \n    # build parameters list for 'report_failure' call\n    parameters.append({\n        'comment': \"Phantom failed to enrich this ticket because it looks like the server is not running CentOS 7, which is the only operating system supported by this playbook.\",\n        'id': source_data_identifier_value,\n    })\n\n    phantom.act(\"add comment\", parameters=parameters, assets=['jira'], name=\"report_failure\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "#5094D4",
                        "connected_to_start": true,
                        "connection_name": "check centos version",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "report failure",
                        "delay": 0,
                        "description": "Leave a comment on the Jira ticket saying that the server is not running CentOS 7 therefore this playbook doesn't know how to handle it.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "10a204f4-c6aa-4cff-af84-0e12bcdf7607",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 280,
                        "line_start": 259,
                        "message": "Configuring now",
                        "name": "add comment",
                        "notes": "Leave a comment on the Jira ticket saying that the server is not running CentOS 7 therefore this playbook doesn't know how to handle it.",
                        "number": 1,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1700,
                            "y": 900
                        },
                        "previous_function": "",
                        "previous_name": "report_failure",
                        "required_params": {
                            "comment": true,
                            "id": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 112,
                            "width": 168
                        },
                        "state": "asset",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 325
                    },
                    {
                        "action": "execute program",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "command": "cat /etc/redhat-release",
                            "ip_hostname": "get_ticket_1:action_result.data.*.fields.Custom Text Field One",
                            "timeout": ""
                        },
                        "angle": 0,
                        "app": "",
                        "approver": "",
                        "assets": [
                            {
                                "action": "",
                                "active": true,
                                "app_name": "SSH",
                                "app_version": "1.0.32",
                                "config_type": "asset",
                                "fields": {
                                    "command": "cat /etc/redhat-release",
                                    "ip_hostname": "get_ticket_1:action_result.data.*.fields.Custom Text Field One",
                                    "timeout": ""
                                },
                                "id": "-",
                                "loaded": false,
                                "missing": false,
                                "name": "ssh",
                                "output": [
                                    {
                                        "data_path": "action_result.data.*.output",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.command",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "ip",
                                            "host name"
                                        ],
                                        "data_path": "action_result.parameter.ip_hostname",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.timeout",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.exit_status",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    }
                                ],
                                "product_name": "SSH",
                                "product_vendor": "Generic",
                                "type": ""
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "check centos version"
                            },
                            ".background": {
                                "stroke": "#E6984E"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "fill": "#FFFFFF",
                                "font-size": 12,
                                "font-weight": 300,
                                "opacity": 0,
                                "ref": ".background",
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            },
                            "g.notes image": {
                                "xlink:href": "/inc/coa/img/block_icon_note_on.svg"
                            },
                            "rect.warn-background": {
                                "fill": "#FFFFFF"
                            },
                            "text.icon": {
                                "fill": "#FFFFFF"
                            }
                        },
                        "block_code": "def check_centos_version(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('check_centos_version() called')\n    \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'check_centos_version' call\n    results_data_1 = phantom.collect2(container=container, datapath=['get_ticket_1:action_result.data.*.fields.Custom Text Field One', 'get_ticket_1:action_result.parameter.context.artifact_id'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'check_centos_version' call\n    for results_item_1 in results_data_1:\n        if results_item_1[0]:\n            parameters.append({\n                'command': \"cat /etc/redhat-release\",\n                'ip_hostname': results_item_1[0],\n                'timeout': \"\",\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': results_item_1[1]},\n            })\n\n    phantom.act(\"execute program\", parameters=parameters, assets=['ssh'], callback=fail_unless_centos7, name=\"check_centos_version\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "#5094D4",
                        "connected_to_start": true,
                        "connection_name": "get ticket",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "check centos version",
                        "delay": 0,
                        "description": "Read the contents of /etc/redhat-release on the server to enable fail_unless_centos7().",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "7592f44d-6fa5-4fee-8c17-b7f011a14326",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 308,
                        "line_start": 283,
                        "message": "Configuring now",
                        "name": "execute program",
                        "notes": "Read the contents of /etc/redhat-release on the server to enable fail_unless_centos7().",
                        "number": 1,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1320,
                            "y": 620
                        },
                        "previous_function": "",
                        "previous_name": "check_centos_version",
                        "required_params": {
                            "command": true,
                            "ip_hostname": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 112,
                            "width": 168
                        },
                        "state": "asset",
                        "status": "warn",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 327
                    }
                ]
            },
            "notes": "This could easily be extended to use more commands and take more advanced actions specific to the results returned from the server."
        },
        "schema": 3,
        "version": "3.5.137"
    },
    "create_time": "2018-02-13T00:58:41.268361+00:00",
    "draft_mode": false,
    "labels": [
        "events"
    ]
}
